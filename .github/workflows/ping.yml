name: Keep Proxy Alive

on:
  schedule:
    - cron: "30 */4 * * *"    

  workflow_dispatch:

jobs:
  keep-alive:
    runs-on: ubuntu-latest
    steps:
      - name: 5 saat boyunca her 10 dakikada bir tüm URL'lere ping at ve en sonunda cache ping at
        env:
          PING_URLS: ${{ secrets.PING_URL }} ${{ secrets.PING_URL2 }} ${{ secrets.PING_URL3 }}
          PING_CACHE_URLS: ${{ secrets.PING_CACHE_URL }} ${{ secrets.PING_CACHE_URL2 }} ${{ secrets.PING_CACHE_URL3 }}
        run: |
          END_TIME=$((SECONDS + 5 * 60 * 60))

          while [ $SECONDS -lt $END_TIME ]; do
            for URL in $PING_URLS; do
              if [[ -n "$URL" ]]; then
                echo "🔄 Yeni ping atılıyor: $(date '+%Y-%m-%d %H:%M:%S') -> $URL"
                HTML=$(curl -s "$URL")
                TEXT=$(echo "$HTML" | grep -oP '(?<=<h1>).*?(?=</h1>)')

                if [[ -z "$TEXT" ]]; then
                  echo "❌ Sistem pasif olabilir! ($URL)"
                else
                  echo "✅ $TEXT ($URL)"
                fi
              fi
            done

            echo "⏳ 10 dakika bekleniyor..."
            sleep 600
          done

          echo "✅ 5 saatlik çalışma tamamlandı."

          for CACHE_URL in $PING_CACHE_URLS; do
            if [[ -n "$CACHE_URL" ]]; then
              echo "🔄 Cache ping atılıyor: $(date '+%Y-%m-%d %H:%M:%S') -> $CACHE_URL"
              CACHE_HTML=$(curl -s "$CACHE_URL")

              CACHE_TEXT=$(echo "$CACHE_HTML" | grep -Po '(?<=\"message\": \")[^\"]+')

              if [[ -z "$CACHE_TEXT" ]]; then
                CACHE_TEXT=$(echo "$CACHE_HTML" | sed -n 's/.*\"message\": *\"\([^\"]*\)\".*/\1/p')
              fi

              if [[ -z "$CACHE_TEXT" ]]; then
                echo "❌ Cache sistemi pasif olabilir! ($CACHE_URL)"
              else
                echo "✅ Cache: $CACHE_TEXT ($CACHE_URL)"
              fi
            fi
          done
