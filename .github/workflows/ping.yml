name: Keep Proxy Alive 2 URL
on:
#  schedule:
#    - cron: "30 */4 * * *"    
  workflow_dispatch:

jobs:
  keep-alive:
    runs-on: ubuntu-latest
    steps:
      - name: 5 saat boyunca her 10 dakikada bir ping at ve en sonunda cache ping at
        env:
          PING_URL: ${{ secrets.PING_URL }}
          PING_URL2: ${{ secrets.PING_URL2 }}
          PING_CACHE_URL: ${{ secrets.PING_CACHE_URL }}
          PING_CACHE_URL2: ${{ secrets.PING_CACHE_URL2 }}
        run: |
          END_TIME=$((SECONDS + 5 * 60 * 60))

          while [ $SECONDS -lt $END_TIME ]; do
            for URL_NAME in PING_URL PING_URL2; do
              URL=${!URL_NAME}
              echo "üîÑ $URL_NAME i√ßin ping atƒ±lƒ±yor: $URL - $(date '+%Y-%m-%d %H:%M:%S')"
              HTML=$(curl -s "$URL")
              TEXT=$(echo "$HTML" | grep -oP '(?<=<h1>).*?(?=</h1>)')

              if [[ -z "$TEXT" ]]; then
                echo "‚ùå $URL_NAME sistemi pasif olabilir!"
              else
                echo "‚úÖ $URL_NAME: $TEXT"
              fi
            done

            echo "‚è≥ 10 dakika bekleniyor..."
            sleep 600
          done

          echo "‚úÖ 5 saatlik √ßalƒ±≈üma tamamlandƒ±."

          for CACHE_NAME in PING_CACHE_URL PING_CACHE_URL2; do
            CACHE_URL=${!CACHE_NAME}
            echo "üîÑ $CACHE_NAME cache ping atƒ±lƒ±yor: $CACHE_URL - $(date '+%Y-%m-%d %H:%M:%S')"
            CACHE_HTML=$(curl -s "$CACHE_URL")
            CACHE_TEXT=$(echo "$CACHE_HTML" | grep -Po '(?<="message": ")[^"]+')

            if [[ -z "$CACHE_TEXT" ]]; then
              CACHE_TEXT=$(echo "$CACHE_HTML" | sed -n 's/.*"message": *"\([^"]*\)".*/\1/p')
            fi

            if [[ -z "$CACHE_TEXT" ]]; then
              echo "‚ùå $CACHE_NAME cache sistemi pasif olabilir!"
            else
              echo "‚úÖ $CACHE_NAME cache: $CACHE_TEXT"
            fi
          done
