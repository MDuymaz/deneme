name: Keep Proxy Alive 2 URL
 
on:
  schedule:
    - cron: "30 */4 * * *"

  workflow_dispatch:

jobs:
  keep-alive:
    runs-on: ubuntu-latest
    steps:
      - name: 5 saat boyunca her 10 dakikada bir ping at ve cache ping
        env:
          PING_URL1: ${{ secrets.PING_URL1 }}
          PING_URL2: ${{ secrets.PING_URL2 }}
          PING_CACHE_URL1: ${{ secrets.PING_CACHE_URL1 }}
          PING_CACHE_URL2: ${{ secrets.PING_CACHE_URL2 }}
        run: |
          END_TIME=$((SECONDS + 5 * 60 * 60))

          while [ $SECONDS -lt $END_TIME ]; do
            echo "‚è∞ Yeni ping turu ba≈ülƒ±yor: $(date '+%Y-%m-%d %H:%M:%S')"

            # üîÑ Normal pingler
            for i in 1 2; do
              VAR="PING_URL$i"
              URL="${!VAR:-}"
              if [[ -n "$URL" ]]; then
                LABEL="$VAR"
                echo "üîÑ Yeni ping atƒ±lƒ±yor -> $LABEL"
                HTML=$(curl -s "$URL")
                TEXT=$(echo "$HTML" | grep -oP '(?<=<h1>).*?(?=</h1>)')

                if [[ -z "$TEXT" ]]; then
                  echo "‚ùå Sistem pasif olabilir! ($LABEL)"
                else
                  echo "‚úÖ $TEXT ($LABEL)"
                fi
              fi
            done

            # üîÑ Cache pingler
            for j in 1 2; do
              VAR="PING_CACHE_URL$j"
              CACHE_URL="${!VAR:-}"
              if [[ -n "$CACHE_URL" ]]; then
                LABEL="$VAR"
                echo "üîÑ Cache ping atƒ±lƒ±yor -> $LABEL"
                CACHE_HTML=$(curl -s "$CACHE_URL")
                CACHE_TEXT=$(echo "$CACHE_HTML" | jq -r '.message')

                if [[ -z "$CACHE_TEXT" || "$CACHE_TEXT" == "null" ]]; then
                  echo "‚ùå Cache sistemi pasif olabilir! ($LABEL)"
                else
                  echo "‚úÖ Cache: $CACHE_TEXT ($LABEL)"
                fi
              fi
            done

            echo "‚è≥ 10 dakika bekleniyor..."
            sleep 600
          done

          echo "‚úÖ 5 saatlik t√ºm pingler tamamlandƒ±."
